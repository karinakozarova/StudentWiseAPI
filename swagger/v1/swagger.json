{
  "swagger": "2.0",
  "info": {
    "title": "StudentWise API",
    "version": "V1",
    "description": "RESTful API for StudentWise Project"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Token returned after user gets authenticated"
    }
  },
  "paths": {
    "/api/v1/agreements": {
      "post": {
        "summary": "Creates an agreement",
        "tags": [
          "Agreements"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "agreement",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "agreement": {
                  "type": "object",
                  "required": [
                    "title"
                  ],
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "agreement created"
          },
          "401": {
            "description": "unauthorized"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "get": {
        "summary": "Shows all agreements in your group",
        "tags": [
          "Agreements"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "agreements shown"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/api/v1/agreements/{id}": {
      "delete": {
        "summary": "Removes an agreement",
        "tags": [
          "Agreements"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "agreement removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "get": {
        "summary": "Shows an agreement in your group",
        "tags": [
          "Agreements"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "agreement shown"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "put": {
        "summary": "Updates an agreement",
        "tags": [
          "Agreements"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "agreement",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "agreement": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "agreement updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/complaints": {
      "post": {
        "summary": "Creates a complaint",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "complaint",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "complaint": {
                  "type": "object",
                  "required": [
                    "title"
                  ],
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "complaint created"
          },
          "401": {
            "description": "unauthorized"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "get": {
        "summary": "Shows complaints which you created in your group",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "complaints shown"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/api/v1/complaints/{id}": {
      "delete": {
        "summary": "Removes a complaint",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "complaint removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "get": {
        "summary": "Shows a complaint in your group",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "complaint shown"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "put": {
        "summary": "Updates a complaint",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "complaint",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "complaint": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "complaint updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/complaints/{id}/mark_as_in_progress": {
      "put": {
        "summary": "Marks a complaint as in progress",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "complaint marked as in progress"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/v1/complaints/{id}/mark_as_rejected": {
      "put": {
        "summary": "Marks a complaint as rejected",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "complaint marked as rejected"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/v1/complaints/{id}/mark_as_resolved": {
      "put": {
        "summary": "Marks a complaint as resolved",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "complaint marked as resolved"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/v1/events/{event_id}/participants": {
      "post": {
        "summary": "Creates an event participant",
        "tags": [
          "EventParticipants"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "event_participant",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event_participant": {
                  "type": "object",
                  "required": [
                    "participant_id"
                  ],
                  "properties": {
                    "participant_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "event participant created"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Removes an event participant",
        "tags": [
          "EventParticipants"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "event_participant",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event_participant": {
                  "type": "object",
                  "required": [
                    "participant_id"
                  ],
                  "properties": {
                    "participant_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "event participant removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/v1/events/{event_id}/votes": {
      "post": {
        "summary": "Creates an event vote",
        "tags": [
          "EventVotes"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "event_vote",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event_vote": {
                  "type": "object",
                  "required": [
                    "finished"
                  ],
                  "properties": {
                    "finished": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "event vote created"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Removes an event vote",
        "tags": [
          "EventVotes"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "event vote removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "put": {
        "summary": "Updates an event vote",
        "tags": [
          "EventVotes"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "event_vote",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event_vote": {
                  "type": "object",
                  "properties": {
                    "finished": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "event vote updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/events": {
      "post": {
        "summary": "Creates an event",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event": {
                  "type": "object",
                  "required": [
                    "title"
                  ],
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "starts_at": {
                      "type": "string"
                    },
                    "finishes_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "event created"
          },
          "401": {
            "description": "unauthorized"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "get": {
        "summary": "Shows all events in your group",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "events shown"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/api/v1/events/{id}": {
      "delete": {
        "summary": "Removes an event",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "event removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "get": {
        "summary": "Shows an event in your group",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "event shown"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "put": {
        "summary": "Updates an event",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event": {
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "starts_at": {
                      "type": "string"
                    },
                    "finishes_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "event updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/events/{id}/mark_as_finished": {
      "put": {
        "summary": "Marks an event as finished",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "event marked as finished"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/events/{id}/unmark_as_finished": {
      "put": {
        "summary": "Unmarks an event as finished",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "event unmarked as finished"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/expenses/{expense_id}/participants": {
      "post": {
        "summary": "Creates an expense participant",
        "tags": [
          "ExpenseParticipants"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "expense_participant",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "expense_participant": {
                  "type": "object",
                  "required": [
                    "participant_id"
                  ],
                  "properties": {
                    "participant_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "expense participant created"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Removes an expense participant",
        "tags": [
          "ExpenseParticipants"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "expense_participant",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "expense_participant": {
                  "type": "object",
                  "required": [
                    "participant_id"
                  ],
                  "properties": {
                    "participant_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "expense participant removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/v1/expenses/{id}/archive": {
      "put": {
        "summary": "Archives an expense",
        "tags": [
          "Expenses"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "expense archived"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/v1/expenses": {
      "post": {
        "summary": "Creates an expense",
        "tags": [
          "Expenses"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "expense",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "expense": {
                  "type": "object",
                  "required": [
                    "name",
                    "price",
                    "quantity"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "quantity": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "expense created"
          },
          "401": {
            "description": "unauthorized"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "get": {
        "summary": "Shows all expenses in your group",
        "tags": [
          "Expenses"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "expenses shown"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/api/v1/expenses/{id}": {
      "delete": {
        "summary": "Removes an expense",
        "tags": [
          "Expenses"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "expense removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "get": {
        "summary": "Shows an expense in your group",
        "tags": [
          "Expenses"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "expense shown"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "put": {
        "summary": "Updates an expense",
        "tags": [
          "Expenses"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "expense",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "expense": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "quantity": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "expense updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/expenses/{id}/unarchive": {
      "put": {
        "summary": "Unarchives an expense",
        "tags": [
          "Expenses"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "expense unarchived"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/v1/groups": {
      "post": {
        "summary": "Creates a group",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "group",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "rules": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "group created"
          },
          "401": {
            "description": "unauthorized"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "get": {
        "summary": "Shows all groups",
        "tags": [
          "Groups"
        ],
        "responses": {
          "200": {
            "description": "groups shown"
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "delete": {
        "summary": "Removes a group",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "group removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "get": {
        "summary": "Shows a group",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "group shown"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "put": {
        "summary": "Updates a group",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "rules": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "group updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "summary": "Creates a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "required": [
                    "email",
                    "first_name",
                    "last_name",
                    "password"
                  ],
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "get": {
        "summary": "Shows all users in your group",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "users shown"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      },
      "put": {
        "summary": "Updates the authenticated user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "required": [
                    "current_password"
                  ],
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "current_password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "user updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "summary": "Authenticates a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "required": [
                    "email",
                    "password"
                  ],
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user authenticated"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/api/v1/users/logout": {
      "delete": {
        "summary": "Revokes user authentication",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "user logged out"
          },
          "401": {
            "description": "unauthorized"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Shows a user in your group",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user shown"
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    }
  }
}